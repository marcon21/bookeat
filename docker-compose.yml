version: "3"

networks:
  internal:
    driver: bridge

services:
  mongo:
      image: mongo
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: 1234
        MONGO_INITDB_DATABASE: restaurant
      networks:
        - internal
      volumes:
        - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_URL: mongodb://root:1234@mongo:27017/
    networks:
      - internal

  # EXPRESSJS instance
  backend:
    container_name: backend
    build: "./backend/"
    volumes:
      - "./backend/app:/opt/backend/app"
      - "/opt/backend/node_modules"
    depends_on:
      - mongo
    ports:
      - "3001:3000"
    environment:
      DB_PWD: "1234"
    networks:
      - internal

  # REACTJS instance
  frontend:
    container_name: frontend
    build: "./frontend/"
    volumes:
      - "./frontend:/opt/frontend"
      - "/opt/frontend/node_modules"
    depends_on:
      - backend
    # ports:
    #   - "80:4173"
    #environment:
    #  - CHOKIDAR_USEPOLLING=true
    networks:
      - internal
    stdin_open: true
    tty: true

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    ports:
        - 80:80
        - 443:443
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf