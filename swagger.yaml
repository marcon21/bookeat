openapi: 3.0.0
info:
  version: "1.0"
  title: "BookEat"
  description: BookEat Ã© una applicazione che permette agli utenti di
    visualizzare un menu ed ordinare le pietanze desiderate.
    Consente inoltre ai dipendenti del ristorante di gestire
    i vari ordini ed i posti a sedere comodamente da un tablet.
  license:
    name: MIT
    url: https://github.com/marcon21/bookeat/blob/main/LICENSE

servers:
  - url: http://localhost:3001/api/v1
    description: Local server
    
paths:
  /menu/{idPiatto}:
    get:
      summary: Ritorna tutti i piatti del menu
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes: 
                    type: boolean
                  message: 
                    type: string
                  data:
                    type: object
                    properties:              
                      categorie:
                        type: array
                      piatti:
                        type: array
                        items:
                          $ref: "#/components/schemas/Piatto"
              example:
                succes: true
                message: "OK"
                data: 
                  categorie: [{
                    "primaria": "Pizza"
                  }, { 
                    "primaria": "Primo",
                    "secondaria": "Mare" 
                  }]
                  piatti:
                    - _id: 1
                      nome: "Pizza Margherita"
                      prezzo: 500
                      categoria: {
                        "primaria": "Pizza"
                      }
                      disponibile: 1
                      descrizione: "Pizza con mozzarella e pomodoro"
                      allergeni: ["Glutine", "Lattosio"]
                      ingredientiModificabili:
                        ["Mozzarella", "Salamino", "Funghi"]
                    - _id: 2
                      nome: "Pizza Diavola"
                      categoria: {
                        "primaria": "Pizza"
                      }
                      prezzo: 600
                      disponibile: 1
                      descrizione: "Pizza con mozzarella, pomodoro e salame piccante"
                      allergeni: ["Glutine", "Lattosio"]
                      ingredientiModificabili:
                        ["Mozzarella", "Salamino", "Funghi"]

        "424":
          description: Errore nel recupero del menu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Errore nel recupero del menu"
    
    post:
      summary: Aggiunge un piatto al menu
      security:
        - jwtCookie: []
      requestBody:
        description: Il piatto da inserire nel menu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Piatto"
            example:
              _id: 1
              nome: "Pizza Margherita"
              prezzo: 500
              categoria: {
                "primaria": "Pizza"
              }
              disponibile: 1
              descrizione: "Pizza con mozzarella e pomodoro"
              allergeni: ["Glutine", "Lattosio"]
              ingredientiModificabili:
                ["Mozzarella", "Salamino", "Funghi"]
      
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes: 
                    type: boolean
                  message: 
                    type: string
                  data: 
                    type: array
              example:
                succes: true
                message: "OK"
                data: []
          
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Unauthorized - Accedi con un account autorizzato e riprova"   
                  
        "424":
          description: Creazione piatto fallita
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Creazione piatto fallita"
    
    put:
      summary: Modifica un piatto identidificato da idPiatto
      security:
        - jwtCookie: []
      parameters:
        - in: path
          name: idPiatto
          schema:
            type: integer
          required: true
          description: Id del piatto da modificare
      requestBody:
        description: Il piatto da inserire nel menu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Piatto"
            example:
              _id: 1
              nome: "Pizza Margherita"
              prezzo: 500
              categoria: {
                "primaria": "Pizza"
              }
              disponibile: 1
              descrizione: "Pizza con mozzarella e pomodoro"
              allergeni: ["Glutine", "Lattosio"]
              ingredientiModificabili:
                ["Mozzarella", "Salamino", "Funghi"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes: 
                    type: boolean
                  message: 
                    type: string
                  data: 
                    type: array
              example:
                succes: true
                message: "OK"
                data: []
                
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Unauthorized - Accedi con un account autorizzato e riprova"
                  
        "424":
          description: Modifica piatto fallita
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Modifica piatto fallita"
    
    delete:
      summary: Elimina un piatto identificato da idPiatto
      security:
        - jwtCookie: []
      parameters:
        - in: path
          name: idPiatto
          schema:
            type: integer
          required: true
          description: Id del piatto da eliminare
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes: 
                    type: boolean
                  message: 
                    type: string
                  data: 
                    type: array
              example:
                succes: true
                message: "OK"
                data: []
                
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Unauthorized - Accedi con un account autorizzato e riprova"
                  
        "424":
          description: Eliminazione piatto fallita
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                  success: false
                  error: "Eliminazione piatto fallita"
  
  /auth/login:
    post:
      summary: Path per loggarsi e rivecere il token jwt
      requestBody:
        description: Body con campo *email* e *password*
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utente"
            example:
              email: "example@email.com"
              password: "password"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                      type: boolean
                  message:
                      type: string
                  data:
                    type: object
                    properties:
                      token: 
                        type: string
                      userType:
                        type: string
              example:
                success: true
                message: Account creato correttamente
                data:
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjY0NjAkjnkaszJlM2UxYmYxNGIyYzEzZSIsImVtYWlsIjoiZGFuaWVsLm1hcmNvbkBzdHVkZW50aS51bml0bi5pdCJ9LCJpYXQiOjE2ODQzMzExNTJ9.fjfOnRwwunj9BuzhFiN_GpNCJajfAKnYqw3yFTVZS8U"
                  userType: "UtenteLoggato"
        "401":
            description: Bad credentials
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrResponse"
                example:
                  success: false
                  error: "Errore, credenziali errate"
  
  /auth/signup:
    post:
      summary: Path per registrarsi e rivecere il token jwt
      requestBody:
        description: Body con campo *email* e *passoword*
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utente"
            example:
              email: "example@email.com"
              password: "password"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                      type: boolean
                  message:
                      type: string
                  data:
                    type: object
                    properties:
                      token: 
                        type: string
              example:
                success: true
                message: Account creato correttamente
                data:
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjY0NjAkjnkaszJlM2UxYmYxNGIyYzEzZSIsImVtYWlsIjoiZGFuaWVsLm1hcmNvbkBzdHVkZW50aS51bml0bi5pdCJ9LCJpYXQiOjE2ODQzMzExNTJ9.fjfOnRwwunj9BuzhFiN_GpNCJajfAKnYqw3yFTVZS8U"
        "401":
            description: Bad credentials
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrResponse"
                example:
                  success: false
                  error: "Errore, credenziali errate"
  
  /utente/profile:
    get:
      summary: Ricevi informazioni sul profilo dell'utente
      security:
        - jwtCookie: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                      type: boolean
                  message:
                      type: string
                  data:
                    type: object
                    properties:
                      user: 
                        type: object
                        properties:
                          id: 
                            type: string
                          email: 
                            type: string
                          password:
                            type: string
                          nome:
                            type: string
                          userType:
                            type: string
                          googleId:
                            type: string
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrResponse"
              example:
                success: false
                error: "Errore, credenziali errate"

components:
  schemas:
    Piatto:
      type: object
      properties:
        _id:
          type: integer
          description: ID del piatto
        nome:
          type: string
          description: Nome del piatto
        prezzo:
          type: integer
          description: Prezzo del piatto
        categoria:
          type: object
          properties:
            primaria:
              type: string
            secondaria:
              type: string
          description: La categoria del piatto
        disponibile:
          type: number
          description: DisponibilitÃ  del piatto
        descrizione:
          type: string
          description: Descrizione del piatto
        allergeni:
          type: array
          description: Allergeni del piatto
        ingredientiModificabili:
          type: array
          description: Ingredienti modificabili del piatto
      example:
        _id: 1
        nome: "Pizza Margherita"
        prezzo: 500
        categoria: "Pizze"
        disponibile: 1
        descrizione: "Pizza con mozzarella e pomodoro"
        allergeni: ["Glutine", "Lattosio"]
        ingredientiModificabili: ["Mozzarella", "Salamino", "Funghi"]

    Utente:
      type: object
      properties:
        email:
          type: string
          description: Campo email
        password:
          type: string
          description: Campo password
      example:
        email: "example@email.com"
        password: "password"
        
    ErrResponse:
      type: object
      properties:
        success:
            type: boolean
        error:
            type: string
            
  securitySchemes:
    jwtCookie:         
      type: apiKey
      in: cookie
      name: jwt